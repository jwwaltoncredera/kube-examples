apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awesome-api-a.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "awesome-api-a.name" . }}
    helm.sh/chart: {{ include "awesome-api-a.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.awesomeApiA.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "awesome-api-a.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "awesome-api-a.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.awesomeApiA.image.repository }}:{{ .Values.awesomeApiA.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AWESOME_APP_B_URL
              value: "http://{{ .Values.global.awesome-service-b }}:92002"
            - name: FOO_BACKEND_HOST
              value: {{ .Values.awesomeApiA.backendFooServiceHostname }}
            - name: LOG_LEVEL
              value: {{ .Values.awesomeApiA.logLevel }}
            - name: PORT
              value: {{ .Values.awesomeApiA.port | quote }}
            - name: RABBITMQ_HOST
              value: {{ .Values.global.rabbitMqHost }}
            - name: RABBITMQ_NAME
              value: {{ .Values.awesomeApiA.rabbitMqQueueName }}
            - name: RABBITMQ_PASS
              value: {{ .Values.global.rabbitMqPass }}
            - name: RABBITMQ_PORT
              value: {{ .Values.global.rabbitMqPort | quote }}
            - name: RABBITMQ_USER
              value: {{ .Values.awesomeApiA.rabbitMqUser }}
          ports:
            - name: http
              containerPort: {{ .Values.awesomeApiA.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.awesomeApiA.service.port }}
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.awesomeApiA.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.awesomeApiA.resources | nindent 12 }}
      {{- with .Values.awesomeApiA.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.awesomeApiA.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.awesomeApiA.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
